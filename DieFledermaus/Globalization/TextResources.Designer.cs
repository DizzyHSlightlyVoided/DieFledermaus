//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DieFledermaus.Globalization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DieFledermaus.Globalization.TextResources", typeof(TextResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus stream has already been successfully decrypted..
        /// </summary>
        internal static string AlreadyDecrypted {
            get {
                return ResourceManager.GetString("AlreadyDecrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current archive entry has already been decrypted..
        /// </summary>
        internal static string AlreadyDecryptedEntry {
            get {
                return ResourceManager.GetString("AlreadyDecryptedEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive has already been opened for writing..
        /// </summary>
        internal static string ArchiveAlreadyWritten {
            get {
                return ResourceManager.GetString("ArchiveAlreadyWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current archive has been disposed..
        /// </summary>
        internal static string ArchiveClosed {
            get {
                return ResourceManager.GetString("ArchiveClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive does not contain any entries..
        /// </summary>
        internal static string ArchiveEmpty {
            get {
                return ResourceManager.GetString("ArchiveEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current archive entry has been deleted..
        /// </summary>
        internal static string ArchiveEntryDeleted {
            get {
                return ResourceManager.GetString("ArchiveEntryDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is an existing filename..
        /// </summary>
        internal static string ArchiveExists {
            get {
                return ResourceManager.GetString("ArchiveExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is an existing empty directory..
        /// </summary>
        internal static string ArchiveExistsDir {
            get {
                return ResourceManager.GetString("ArchiveExistsDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive with path &quot;{0}&quot; has not yet been written to..
        /// </summary>
        internal static string ArchiveNotWritten {
            get {
                return ResourceManager.GetString("ArchiveNotWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is an existing directory name..
        /// </summary>
        internal static string ArchivePathExistingDir {
            get {
                return ResourceManager.GetString("ArchivePathExistingDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains an existing filename as one of its directories..
        /// </summary>
        internal static string ArchivePathExistingFileAsDir {
            get {
                return ResourceManager.GetString("ArchivePathExistingFileAsDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is an existing non-empty directory..
        /// </summary>
        internal static string ArchivePathNonEmpty {
            get {
                return ResourceManager.GetString("ArchivePathNonEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current archive is in read-mode..
        /// </summary>
        internal static string ArchiveReadMode {
            get {
                return ResourceManager.GetString("ArchiveReadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current archive is in create-mode..
        /// </summary>
        internal static string ArchiveWriteMode {
            get {
                return ResourceManager.GetString("ArchiveWriteMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computed checksum did not match the expected value..
        /// </summary>
        internal static string BadChecksum {
            get {
                return ResourceManager.GetString("BadChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified index plus the number of elements in the collection is greater than the length of the specified array..
        /// </summary>
        internal static string BadIndexRange {
            get {
                return ResourceManager.GetString("BadIndexRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is invalid..
        /// </summary>
        internal static string BadKey {
            get {
                return ResourceManager.GetString("BadKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified array is invalid..
        /// </summary>
        internal static string CollectBadArray {
            get {
                return ResourceManager.GetString("CollectBadArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified array is the wrong type..
        /// </summary>
        internal static string CollectBadArrayType {
            get {
                return ResourceManager.GetString("CollectBadArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current collection is read-only..
        /// </summary>
        internal static string CollectReadOnly {
            get {
                return ResourceManager.GetString("CollectReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of a comment must be greater than 0 and less than or equal to 65536..
        /// </summary>
        internal static string CommentLength {
            get {
                return ResourceManager.GetString("CommentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current stream is closed..
        /// </summary>
        internal static string CurrentClosed {
            get {
                return ResourceManager.GetString("CurrentClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current stream is in read-mode..
        /// </summary>
        internal static string CurrentRead {
            get {
                return ResourceManager.GetString("CurrentRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current stream is in write-mode..
        /// </summary>
        internal static string CurrentWrite {
            get {
                return ResourceManager.GetString("CurrentWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DSA public key used to verify the signature is invalid..
        /// </summary>
        internal static string DsaSigInvalid {
            get {
                return ResourceManager.GetString("DsaSigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DSA private key used to sign the stream is invalid..
        /// </summary>
        internal static string DsaSigPrivInvalid {
            get {
                return ResourceManager.GetString("DsaSigPrivInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ECDSA public key used to verify the signature is invalid..
        /// </summary>
        internal static string EcdsaSigInvalid {
            get {
                return ResourceManager.GetString("EcdsaSigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ECDSA private key used to sign the stream is invalid..
        /// </summary>
        internal static string EcdsaSigPrivInvalid {
            get {
                return ResourceManager.GetString("EcdsaSigPrivInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename contains an unpaired surrogate character: {0}.
        /// </summary>
        internal static string FilenameBadSurrogate {
            get {
                return ResourceManager.GetString("FilenameBadSurrogate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains an unpaired surrogate character: {0}.
        /// </summary>
        internal static string FilenameBadSurrogatePath {
            get {
                return ResourceManager.GetString("FilenameBadSurrogatePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename contained a non-whitespace control character..
        /// </summary>
        internal static string FilenameControl {
            get {
                return ResourceManager.GetString("FilenameControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contained a non-whitespace control character..
        /// </summary>
        internal static string FilenameControlPath {
            get {
                return ResourceManager.GetString("FilenameControlPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value &quot;{0}&quot; is not a valid filename..
        /// </summary>
        internal static string FilenameDot {
            get {
                return ResourceManager.GetString("FilenameDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains an invalid element: {0}.
        /// </summary>
        internal static string FilenameDotPath {
            get {
                return ResourceManager.GetString("FilenameDotPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path has a length greater than 255 UTF-8 bytes, counting the trailing forward-slash..
        /// </summary>
        internal static string FilenameEDirLengthLong {
            get {
                return ResourceManager.GetString("FilenameEDirLengthLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename contains a forward-slash character &quot;/&quot;..
        /// </summary>
        internal static string FilenameForwardSlash {
            get {
                return ResourceManager.GetString("FilenameForwardSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename has a length greater than 256 UTF-8 bytes..
        /// </summary>
        internal static string FilenameLengthLong {
            get {
                return ResourceManager.GetString("FilenameLengthLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename is empty..
        /// </summary>
        internal static string FilenameLengthZero {
            get {
                return ResourceManager.GetString("FilenameLengthZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path has a length of 0..
        /// </summary>
        internal static string FilenameLengthZeroPath {
            get {
                return ResourceManager.GetString("FilenameLengthZeroPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path has a double forward-slash..
        /// </summary>
        internal static string FilenamePathDoubleSlash {
            get {
                return ResourceManager.GetString("FilenamePathDoubleSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path has a leading forward-slash..
        /// </summary>
        internal static string FilenamePathLeadingSlash {
            get {
                return ResourceManager.GetString("FilenamePathLeadingSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified filename contained only whitespace characters..
        /// </summary>
        internal static string FilenameWhitespace {
            get {
                return ResourceManager.GetString("FilenameWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path contains a filename or directory name containing only whitespace..
        /// </summary>
        internal static string FilenameWhitespacePath {
            get {
                return ResourceManager.GetString("FilenameWhitespacePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus stream contains invalid or contradictory formats..
        /// </summary>
        internal static string FormatBad {
            get {
                return ResourceManager.GetString("FormatBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermauZ archive contains invalid or contradictory formats..
        /// </summary>
        internal static string FormatBadZ {
            get {
                return ResourceManager.GetString("FormatBadZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus stream contains an unknown format..
        /// </summary>
        internal static string FormatUnknown {
            get {
                return ResourceManager.GetString("FormatUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermauZ archive contains an unknown format..
        /// </summary>
        internal static string FormatUnknownZ {
            get {
                return ResourceManager.GetString("FormatUnknownZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is not a valid DieFledermaus stream..
        /// </summary>
        internal static string InvalidDataMaus {
            get {
                return ResourceManager.GetString("InvalidDataMaus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream does not contain a valid DieFledermauZ archive..
        /// </summary>
        internal static string InvalidDataMauZ {
            get {
                return ResourceManager.GetString("InvalidDataMauZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified IV must be the same length as the block size..
        /// </summary>
        internal static string IvLength {
            get {
                return ResourceManager.GetString("IvLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is an invalid length..
        /// </summary>
        internal static string KeyLength {
            get {
                return ResourceManager.GetString("KeyLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus stream is encrypted, and requires a password..
        /// </summary>
        internal static string KeyNotSet {
            get {
                return ResourceManager.GetString("KeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermauZ archive is encrypted, and requires a password..
        /// </summary>
        internal static string KeyNotSetZ {
            get {
                return ResourceManager.GetString("KeyNotSetZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus stream is not encrypted..
        /// </summary>
        internal static string NotEncrypted {
            get {
                return ResourceManager.GetString("NotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of the parameters &quot;{0}&quot; and &quot;{1}&quot; is greater than the length of the specified array..
        /// </summary>
        internal static string OutOfRangeLength {
            get {
                return ResourceManager.GetString("OutOfRangeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is less than 0..
        /// </summary>
        internal static string OutOfRangeLessThanZero {
            get {
                return ResourceManager.GetString("OutOfRangeLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value must either be LzmaDictionarySize.Default, or must be between LzmaDictionarySize.MinValue and LzmaDictionarySize.MaxValue..
        /// </summary>
        internal static string OutOfRangeLzma {
            get {
                return ResourceManager.GetString("OutOfRangeLzma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A password must be at least 1 character long..
        /// </summary>
        internal static string PasswordZeroLength {
            get {
                return ResourceManager.GetString("PasswordZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of an RSA key-identifier must either be null or must have a length between 1 and 65536..
        /// </summary>
        internal static string RsaIdLength {
            get {
                return ResourceManager.GetString("RsaIdLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not a valid private key..
        /// </summary>
        internal static string RsaNeedPrivate {
            get {
                return ResourceManager.GetString("RsaNeedPrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not a valid public or private key..
        /// </summary>
        internal static string RsaNeedPublic {
            get {
                return ResourceManager.GetString("RsaNeedPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RSA public key used to verify the signature is invalid..
        /// </summary>
        internal static string RsaSigInvalid {
            get {
                return ResourceManager.GetString("RsaSigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current instance is not signed..
        /// </summary>
        internal static string RsaSigNone {
            get {
                return ResourceManager.GetString("RsaSigNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RSA private key used to sign the stream is invalid..
        /// </summary>
        internal static string RsaSigPrivInvalid {
            get {
                return ResourceManager.GetString("RsaSigPrivInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RSA signature has already been verified..
        /// </summary>
        internal static string RsaSigVerified {
            get {
                return ResourceManager.GetString("RsaSigVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified salt must be the maximum length specified for the KeySize..
        /// </summary>
        internal static string SaltLength {
            get {
                return ResourceManager.GetString("SaltLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified stream is closed..
        /// </summary>
        internal static string StreamClosed {
            get {
                return ResourceManager.GetString("StreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified stream does not support reading..
        /// </summary>
        internal static string StreamNotReadable {
            get {
                return ResourceManager.GetString("StreamNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified stream does not support writing..
        /// </summary>
        internal static string StreamNotWritable {
            get {
                return ResourceManager.GetString("StreamNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus version number is higher than the supported maximum of the current implementation..
        /// </summary>
        internal static string VersionTooHigh {
            get {
                return ResourceManager.GetString("VersionTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermauZ version number is higher than the supported maximum of the current implementation..
        /// </summary>
        internal static string VersionTooHighZ {
            get {
                return ResourceManager.GetString("VersionTooHighZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermaus version number is lower than the supported minimum..
        /// </summary>
        internal static string VersionTooLow {
            get {
                return ResourceManager.GetString("VersionTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DieFledermauZ version number is lower than the supported minimum..
        /// </summary>
        internal static string VersionTooLowZ {
            get {
                return ResourceManager.GetString("VersionTooLowZ", resourceCulture);
            }
        }
    }
}
